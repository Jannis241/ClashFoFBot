
bei get buildings funktion das noch in das richtig  format (json?) formattieren und richtig die prediction auch returnen
damit jesko die im ui bekomen also aus python richtig returnen und dann aus rust auch richtig im json format??


 in die get buidlings funktion einbauen dass die die avg confidence noch mit returnt, dass wir
 später ein dorf skippen können falls sich das model zu unsicher ist


 avg confidence im ui anzeigen, entweder so machen dass get buildings die avg conf direkt retunrt oder
 sonst kann man das auch um ui ausrechnen weil der buildings struct die confidence hat.


 augementation einbauen: einfach nur ein path zu dem image UND ein path zu dem label von dem image und er packt die dann selber
 nach train und val. ---> noch überlegen ob einfach alles nach train geapckt wird oder auch was nach val??? weil
 diese data natürlich bisschen falsch sein könnte ist es glaube ich nciht so gut für val, also einfach alles nach train??
 dann könnte aber was in val fehlen!


 validation und train dürfen nicht gemixxt werden also augemntated train muss auch wieder in train und anderherum.
 jetzt wahrscheinlich einfach wieder so machen dass wenn man ein train image verändert es auch wieder in train land
 et und so. noch überlegen was ich als parameter nehme: path? name? path von image und label oder nur eins?
 --> direkt speichern oder erstmal returnen? evtl kennzeichnen damit man falls was schief geht easy die augemntated data löschen kann
 also zb image_augemntated_1.png wenn man image augmentaed etc..




 avg confidence text
 label auswäheln trainieren löschen bennen etc
 training stoppen button
 data returnen
 data augemntation
 level und gebäude trennen
 get_avg confidence func
 zahlen erkennen
 settings zu coc acc linken damit man rathaus und generelle level hat in ui und die settings dann speichern

 sicherstellen dass es keinen fehler bei communication gibt --> alles vorher löschen
